// Generated by CoffeeScript 1.9.1
(function() {
  var axon, fs, path, sio;

  path = require('path');

  fs = require('fs');

  sio = require('socket.io');

  axon = require('axon');

  module.exports = function(server, patterns, options) {
    var defaultCallback, i, len, pattern, registerCallback, socket;
    if (options == null) {
      options = {};
    }
    options.serveClient = true;
    server.io = sio(server, options);
    socket = axon.socket('sub-emitter');
    socket.connect(9105);
    logging.log('Realtime-Adapter: socket.io initialized');
    defaultCallback = function(change, msg) {
      return server.io.emit(change, msg);
    };
    registerCallback = function(pattern, callback) {
      return socket.on(pattern, function(event, id) {
        if (id) {
          event = pattern.replace('*', event);
          return callback(event, id);
        } else {
          return callback(pattern, event);
        }
      });
    };
    if (patterns == null) {
      patterns = [];
    }
    for (i = 0, len = patterns.length; i < len; i++) {
      pattern = patterns[i];
      registerCallback(pattern, defaultCallback);
    }
    return {
      on: registerCallback
    };
  };

}).call(this);
